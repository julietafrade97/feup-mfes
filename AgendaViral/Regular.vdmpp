class Regular is subclass of User

	types
	
			public String = seq of char;
	
	instance variables	
	
		private firstName: String;
		private lastName: String;
		private balance: real;
		private nTicketsBought: nat;
		
	operations
	
		-- Constructor
		public Regular : String * String * String * String * real * real ==> Regular
		Regular(m, p, fName, lName, b, nt) == (
			UserInit(m, p);
			firstName := fName;
			lastName := lName;
			balance := b;
			nTicketsBought := nt; 
			return self;
		);
		
		-- Returns if user is admin
		public pure isAdmin: () ==> bool
		isAdmin() == return false;
		
		-- Returns number of bought tickets
		public pure getTicketsBought: () ==> nat
		getTicketsBought() == return nTicketsBought;
		
		-- Returns balance
		public pure getBalance: () ==> nat
		getBalance() == return balance;
		
		-- Makes a purchase
		public buyTickets: nat1 * real ==> ()
		buyTickets(nTickets, priceTicket) == (
			balance := balance - (nTickets * priceTicket);
			nTicketsBought := nTicketsBought + nTickets
		)
		pre balance >= nTickets * priceTicket
		post balance = balance~ - (nTickets * priceTicket);

end Regular